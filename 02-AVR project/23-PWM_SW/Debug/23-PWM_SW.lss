
23-PWM_SW.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000089a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800060  00800060  0000090e  2**0
                  ALLOC
  2 .stab         00000bdc  00000000  00000000  00000910  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000918  00000000  00000000  000014ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 df 03 	jmp	0x7be	; 0x7be <__vector_10>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a4 36       	cpi	r26, 0x64	; 100
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 0c 04 	call	0x818	; 0x818 <main>
  74:	0c 94 4b 04 	jmp	0x896	; 0x896 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <GIE_voidEnable>:
#include "GIE_Interface.h"
#include "GIE_Private.h"
#include "GIE_Cfg.h"

void GIE_voidEnable(void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG , SREG_I);
  84:	af e5       	ldi	r26, 0x5F	; 95
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	ef e5       	ldi	r30, 0x5F	; 95
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	80 68       	ori	r24, 0x80	; 128
  90:	8c 93       	st	X, r24
}
  92:	cf 91       	pop	r28
  94:	df 91       	pop	r29
  96:	08 95       	ret

00000098 <GIE_voidDisable>:

void GIE_voidDisable(void)
{
  98:	df 93       	push	r29
  9a:	cf 93       	push	r28
  9c:	cd b7       	in	r28, 0x3d	; 61
  9e:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG , SREG_I);
  a0:	af e5       	ldi	r26, 0x5F	; 95
  a2:	b0 e0       	ldi	r27, 0x00	; 0
  a4:	ef e5       	ldi	r30, 0x5F	; 95
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	8f 77       	andi	r24, 0x7F	; 127
  ac:	8c 93       	st	X, r24
}
  ae:	cf 91       	pop	r28
  b0:	df 91       	pop	r29
  b2:	08 95       	ret

000000b4 <GPIO_voidSetPinValue>:

#include "GPIO_Interface.h"
#include "GPIO_Private.h"

void GPIO_voidSetPinValue(u8 port_id , u8 pin , u8 value)
{
  b4:	df 93       	push	r29
  b6:	cf 93       	push	r28
  b8:	cd b7       	in	r28, 0x3d	; 61
  ba:	de b7       	in	r29, 0x3e	; 62
  bc:	27 97       	sbiw	r28, 0x07	; 7
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	f8 94       	cli
  c2:	de bf       	out	0x3e, r29	; 62
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	cd bf       	out	0x3d, r28	; 61
  c8:	89 83       	std	Y+1, r24	; 0x01
  ca:	6a 83       	std	Y+2, r22	; 0x02
  cc:	4b 83       	std	Y+3, r20	; 0x03
	if (value == HIGH)
  ce:	8b 81       	ldd	r24, Y+3	; 0x03
  d0:	81 30       	cpi	r24, 0x01	; 1
  d2:	09 f0       	breq	.+2      	; 0xd6 <GPIO_voidSetPinValue+0x22>
  d4:	6f c0       	rjmp	.+222    	; 0x1b4 <GPIO_voidSetPinValue+0x100>
	{
		switch (port_id)
  d6:	89 81       	ldd	r24, Y+1	; 0x01
  d8:	28 2f       	mov	r18, r24
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	3f 83       	std	Y+7, r19	; 0x07
  de:	2e 83       	std	Y+6, r18	; 0x06
  e0:	8e 81       	ldd	r24, Y+6	; 0x06
  e2:	9f 81       	ldd	r25, Y+7	; 0x07
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	91 05       	cpc	r25, r1
  e8:	49 f1       	breq	.+82     	; 0x13c <GPIO_voidSetPinValue+0x88>
  ea:	2e 81       	ldd	r18, Y+6	; 0x06
  ec:	3f 81       	ldd	r19, Y+7	; 0x07
  ee:	22 30       	cpi	r18, 0x02	; 2
  f0:	31 05       	cpc	r19, r1
  f2:	2c f4       	brge	.+10     	; 0xfe <GPIO_voidSetPinValue+0x4a>
  f4:	8e 81       	ldd	r24, Y+6	; 0x06
  f6:	9f 81       	ldd	r25, Y+7	; 0x07
  f8:	00 97       	sbiw	r24, 0x00	; 0
  fa:	61 f0       	breq	.+24     	; 0x114 <GPIO_voidSetPinValue+0x60>
  fc:	d2 c0       	rjmp	.+420    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
  fe:	2e 81       	ldd	r18, Y+6	; 0x06
 100:	3f 81       	ldd	r19, Y+7	; 0x07
 102:	22 30       	cpi	r18, 0x02	; 2
 104:	31 05       	cpc	r19, r1
 106:	71 f1       	breq	.+92     	; 0x164 <GPIO_voidSetPinValue+0xb0>
 108:	8e 81       	ldd	r24, Y+6	; 0x06
 10a:	9f 81       	ldd	r25, Y+7	; 0x07
 10c:	83 30       	cpi	r24, 0x03	; 3
 10e:	91 05       	cpc	r25, r1
 110:	e9 f1       	breq	.+122    	; 0x18c <GPIO_voidSetPinValue+0xd8>
 112:	c7 c0       	rjmp	.+398    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
		{
			case PORTA :
			SET_BIT (GPIO_PORTA , pin);
 114:	ab e3       	ldi	r26, 0x3B	; 59
 116:	b0 e0       	ldi	r27, 0x00	; 0
 118:	eb e3       	ldi	r30, 0x3B	; 59
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	48 2f       	mov	r20, r24
 120:	8a 81       	ldd	r24, Y+2	; 0x02
 122:	28 2f       	mov	r18, r24
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 2e       	mov	r0, r18
 12c:	02 c0       	rjmp	.+4      	; 0x132 <GPIO_voidSetPinValue+0x7e>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	0a 94       	dec	r0
 134:	e2 f7       	brpl	.-8      	; 0x12e <GPIO_voidSetPinValue+0x7a>
 136:	84 2b       	or	r24, r20
 138:	8c 93       	st	X, r24
 13a:	b3 c0       	rjmp	.+358    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
			break;

			case PORTB :
			SET_BIT (GPIO_PORTB , pin);
 13c:	a8 e3       	ldi	r26, 0x38	; 56
 13e:	b0 e0       	ldi	r27, 0x00	; 0
 140:	e8 e3       	ldi	r30, 0x38	; 56
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	80 81       	ld	r24, Z
 146:	48 2f       	mov	r20, r24
 148:	8a 81       	ldd	r24, Y+2	; 0x02
 14a:	28 2f       	mov	r18, r24
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 2e       	mov	r0, r18
 154:	02 c0       	rjmp	.+4      	; 0x15a <GPIO_voidSetPinValue+0xa6>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	0a 94       	dec	r0
 15c:	e2 f7       	brpl	.-8      	; 0x156 <GPIO_voidSetPinValue+0xa2>
 15e:	84 2b       	or	r24, r20
 160:	8c 93       	st	X, r24
 162:	9f c0       	rjmp	.+318    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
			break;

			case PORTC :
			SET_BIT (GPIO_PORTC , pin);
 164:	a5 e3       	ldi	r26, 0x35	; 53
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	e5 e3       	ldi	r30, 0x35	; 53
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	48 2f       	mov	r20, r24
 170:	8a 81       	ldd	r24, Y+2	; 0x02
 172:	28 2f       	mov	r18, r24
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 2e       	mov	r0, r18
 17c:	02 c0       	rjmp	.+4      	; 0x182 <GPIO_voidSetPinValue+0xce>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	0a 94       	dec	r0
 184:	e2 f7       	brpl	.-8      	; 0x17e <GPIO_voidSetPinValue+0xca>
 186:	84 2b       	or	r24, r20
 188:	8c 93       	st	X, r24
 18a:	8b c0       	rjmp	.+278    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
			break;

			case PORTD :
			SET_BIT (GPIO_PORTD , pin);
 18c:	a2 e3       	ldi	r26, 0x32	; 50
 18e:	b0 e0       	ldi	r27, 0x00	; 0
 190:	e2 e3       	ldi	r30, 0x32	; 50
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	48 2f       	mov	r20, r24
 198:	8a 81       	ldd	r24, Y+2	; 0x02
 19a:	28 2f       	mov	r18, r24
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 2e       	mov	r0, r18
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <GPIO_voidSetPinValue+0xf6>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	0a 94       	dec	r0
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <GPIO_voidSetPinValue+0xf2>
 1ae:	84 2b       	or	r24, r20
 1b0:	8c 93       	st	X, r24
 1b2:	77 c0       	rjmp	.+238    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>

			default:
			break;
		}
	}
	else if (value == LOW)
 1b4:	8b 81       	ldd	r24, Y+3	; 0x03
 1b6:	88 23       	and	r24, r24
 1b8:	09 f0       	breq	.+2      	; 0x1bc <GPIO_voidSetPinValue+0x108>
 1ba:	73 c0       	rjmp	.+230    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
	{
		switch (port_id)
 1bc:	89 81       	ldd	r24, Y+1	; 0x01
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	3d 83       	std	Y+5, r19	; 0x05
 1c4:	2c 83       	std	Y+4, r18	; 0x04
 1c6:	8c 81       	ldd	r24, Y+4	; 0x04
 1c8:	9d 81       	ldd	r25, Y+5	; 0x05
 1ca:	81 30       	cpi	r24, 0x01	; 1
 1cc:	91 05       	cpc	r25, r1
 1ce:	59 f1       	breq	.+86     	; 0x226 <GPIO_voidSetPinValue+0x172>
 1d0:	2c 81       	ldd	r18, Y+4	; 0x04
 1d2:	3d 81       	ldd	r19, Y+5	; 0x05
 1d4:	22 30       	cpi	r18, 0x02	; 2
 1d6:	31 05       	cpc	r19, r1
 1d8:	2c f4       	brge	.+10     	; 0x1e4 <GPIO_voidSetPinValue+0x130>
 1da:	8c 81       	ldd	r24, Y+4	; 0x04
 1dc:	9d 81       	ldd	r25, Y+5	; 0x05
 1de:	00 97       	sbiw	r24, 0x00	; 0
 1e0:	69 f0       	breq	.+26     	; 0x1fc <GPIO_voidSetPinValue+0x148>
 1e2:	5f c0       	rjmp	.+190    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
 1e4:	2c 81       	ldd	r18, Y+4	; 0x04
 1e6:	3d 81       	ldd	r19, Y+5	; 0x05
 1e8:	22 30       	cpi	r18, 0x02	; 2
 1ea:	31 05       	cpc	r19, r1
 1ec:	89 f1       	breq	.+98     	; 0x250 <GPIO_voidSetPinValue+0x19c>
 1ee:	8c 81       	ldd	r24, Y+4	; 0x04
 1f0:	9d 81       	ldd	r25, Y+5	; 0x05
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	09 f4       	brne	.+2      	; 0x1fa <GPIO_voidSetPinValue+0x146>
 1f8:	40 c0       	rjmp	.+128    	; 0x27a <GPIO_voidSetPinValue+0x1c6>
 1fa:	53 c0       	rjmp	.+166    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
		{
			case PORTA :
			CLR_BIT (GPIO_PORTA , pin);
 1fc:	ab e3       	ldi	r26, 0x3B	; 59
 1fe:	b0 e0       	ldi	r27, 0x00	; 0
 200:	eb e3       	ldi	r30, 0x3B	; 59
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	80 81       	ld	r24, Z
 206:	48 2f       	mov	r20, r24
 208:	8a 81       	ldd	r24, Y+2	; 0x02
 20a:	28 2f       	mov	r18, r24
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 2e       	mov	r0, r18
 214:	02 c0       	rjmp	.+4      	; 0x21a <GPIO_voidSetPinValue+0x166>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	0a 94       	dec	r0
 21c:	e2 f7       	brpl	.-8      	; 0x216 <GPIO_voidSetPinValue+0x162>
 21e:	80 95       	com	r24
 220:	84 23       	and	r24, r20
 222:	8c 93       	st	X, r24
 224:	3e c0       	rjmp	.+124    	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
			break;

			case PORTB :
			CLR_BIT (GPIO_PORTB , pin);
 226:	a8 e3       	ldi	r26, 0x38	; 56
 228:	b0 e0       	ldi	r27, 0x00	; 0
 22a:	e8 e3       	ldi	r30, 0x38	; 56
 22c:	f0 e0       	ldi	r31, 0x00	; 0
 22e:	80 81       	ld	r24, Z
 230:	48 2f       	mov	r20, r24
 232:	8a 81       	ldd	r24, Y+2	; 0x02
 234:	28 2f       	mov	r18, r24
 236:	30 e0       	ldi	r19, 0x00	; 0
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 2e       	mov	r0, r18
 23e:	02 c0       	rjmp	.+4      	; 0x244 <GPIO_voidSetPinValue+0x190>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	0a 94       	dec	r0
 246:	e2 f7       	brpl	.-8      	; 0x240 <GPIO_voidSetPinValue+0x18c>
 248:	80 95       	com	r24
 24a:	84 23       	and	r24, r20
 24c:	8c 93       	st	X, r24
 24e:	29 c0       	rjmp	.+82     	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
			break;

			case PORTC :
			CLR_BIT (GPIO_PORTC , pin);
 250:	a5 e3       	ldi	r26, 0x35	; 53
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	e5 e3       	ldi	r30, 0x35	; 53
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	48 2f       	mov	r20, r24
 25c:	8a 81       	ldd	r24, Y+2	; 0x02
 25e:	28 2f       	mov	r18, r24
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 2e       	mov	r0, r18
 268:	02 c0       	rjmp	.+4      	; 0x26e <GPIO_voidSetPinValue+0x1ba>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	0a 94       	dec	r0
 270:	e2 f7       	brpl	.-8      	; 0x26a <GPIO_voidSetPinValue+0x1b6>
 272:	80 95       	com	r24
 274:	84 23       	and	r24, r20
 276:	8c 93       	st	X, r24
 278:	14 c0       	rjmp	.+40     	; 0x2a2 <GPIO_voidSetPinValue+0x1ee>
			break;

			case PORTD :
			CLR_BIT (GPIO_PORTD , pin);
 27a:	a2 e3       	ldi	r26, 0x32	; 50
 27c:	b0 e0       	ldi	r27, 0x00	; 0
 27e:	e2 e3       	ldi	r30, 0x32	; 50
 280:	f0 e0       	ldi	r31, 0x00	; 0
 282:	80 81       	ld	r24, Z
 284:	48 2f       	mov	r20, r24
 286:	8a 81       	ldd	r24, Y+2	; 0x02
 288:	28 2f       	mov	r18, r24
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	02 2e       	mov	r0, r18
 292:	02 c0       	rjmp	.+4      	; 0x298 <GPIO_voidSetPinValue+0x1e4>
 294:	88 0f       	add	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	0a 94       	dec	r0
 29a:	e2 f7       	brpl	.-8      	; 0x294 <GPIO_voidSetPinValue+0x1e0>
 29c:	80 95       	com	r24
 29e:	84 23       	and	r24, r20
 2a0:	8c 93       	st	X, r24
	{
		/* Should not be here */
	}


}
 2a2:	27 96       	adiw	r28, 0x07	; 7
 2a4:	0f b6       	in	r0, 0x3f	; 63
 2a6:	f8 94       	cli
 2a8:	de bf       	out	0x3e, r29	; 62
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	cd bf       	out	0x3d, r28	; 61
 2ae:	cf 91       	pop	r28
 2b0:	df 91       	pop	r29
 2b2:	08 95       	ret

000002b4 <GPIO_voidSetPinDirection>:

void GPIO_voidSetPinDirection(u8 port_id , u8 pin , u8 dirc )
{
 2b4:	df 93       	push	r29
 2b6:	cf 93       	push	r28
 2b8:	cd b7       	in	r28, 0x3d	; 61
 2ba:	de b7       	in	r29, 0x3e	; 62
 2bc:	27 97       	sbiw	r28, 0x07	; 7
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	f8 94       	cli
 2c2:	de bf       	out	0x3e, r29	; 62
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	cd bf       	out	0x3d, r28	; 61
 2c8:	89 83       	std	Y+1, r24	; 0x01
 2ca:	6a 83       	std	Y+2, r22	; 0x02
 2cc:	4b 83       	std	Y+3, r20	; 0x03
	if (dirc == OUTPUT)
 2ce:	8b 81       	ldd	r24, Y+3	; 0x03
 2d0:	81 30       	cpi	r24, 0x01	; 1
 2d2:	09 f0       	breq	.+2      	; 0x2d6 <GPIO_voidSetPinDirection+0x22>
 2d4:	6f c0       	rjmp	.+222    	; 0x3b4 <GPIO_voidSetPinDirection+0x100>
	{
		switch (port_id)
 2d6:	89 81       	ldd	r24, Y+1	; 0x01
 2d8:	28 2f       	mov	r18, r24
 2da:	30 e0       	ldi	r19, 0x00	; 0
 2dc:	3f 83       	std	Y+7, r19	; 0x07
 2de:	2e 83       	std	Y+6, r18	; 0x06
 2e0:	8e 81       	ldd	r24, Y+6	; 0x06
 2e2:	9f 81       	ldd	r25, Y+7	; 0x07
 2e4:	81 30       	cpi	r24, 0x01	; 1
 2e6:	91 05       	cpc	r25, r1
 2e8:	49 f1       	breq	.+82     	; 0x33c <GPIO_voidSetPinDirection+0x88>
 2ea:	2e 81       	ldd	r18, Y+6	; 0x06
 2ec:	3f 81       	ldd	r19, Y+7	; 0x07
 2ee:	22 30       	cpi	r18, 0x02	; 2
 2f0:	31 05       	cpc	r19, r1
 2f2:	2c f4       	brge	.+10     	; 0x2fe <GPIO_voidSetPinDirection+0x4a>
 2f4:	8e 81       	ldd	r24, Y+6	; 0x06
 2f6:	9f 81       	ldd	r25, Y+7	; 0x07
 2f8:	00 97       	sbiw	r24, 0x00	; 0
 2fa:	61 f0       	breq	.+24     	; 0x314 <GPIO_voidSetPinDirection+0x60>
 2fc:	d2 c0       	rjmp	.+420    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
 2fe:	2e 81       	ldd	r18, Y+6	; 0x06
 300:	3f 81       	ldd	r19, Y+7	; 0x07
 302:	22 30       	cpi	r18, 0x02	; 2
 304:	31 05       	cpc	r19, r1
 306:	71 f1       	breq	.+92     	; 0x364 <GPIO_voidSetPinDirection+0xb0>
 308:	8e 81       	ldd	r24, Y+6	; 0x06
 30a:	9f 81       	ldd	r25, Y+7	; 0x07
 30c:	83 30       	cpi	r24, 0x03	; 3
 30e:	91 05       	cpc	r25, r1
 310:	e9 f1       	breq	.+122    	; 0x38c <GPIO_voidSetPinDirection+0xd8>
 312:	c7 c0       	rjmp	.+398    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
		{
			case PORTA :
			SET_BIT (GPIO_DDRA , pin);
 314:	aa e3       	ldi	r26, 0x3A	; 58
 316:	b0 e0       	ldi	r27, 0x00	; 0
 318:	ea e3       	ldi	r30, 0x3A	; 58
 31a:	f0 e0       	ldi	r31, 0x00	; 0
 31c:	80 81       	ld	r24, Z
 31e:	48 2f       	mov	r20, r24
 320:	8a 81       	ldd	r24, Y+2	; 0x02
 322:	28 2f       	mov	r18, r24
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	02 2e       	mov	r0, r18
 32c:	02 c0       	rjmp	.+4      	; 0x332 <GPIO_voidSetPinDirection+0x7e>
 32e:	88 0f       	add	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	0a 94       	dec	r0
 334:	e2 f7       	brpl	.-8      	; 0x32e <GPIO_voidSetPinDirection+0x7a>
 336:	84 2b       	or	r24, r20
 338:	8c 93       	st	X, r24
 33a:	b3 c0       	rjmp	.+358    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
			break;

			case PORTB :
			SET_BIT (GPIO_DDRB , pin);
 33c:	a7 e3       	ldi	r26, 0x37	; 55
 33e:	b0 e0       	ldi	r27, 0x00	; 0
 340:	e7 e3       	ldi	r30, 0x37	; 55
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	48 2f       	mov	r20, r24
 348:	8a 81       	ldd	r24, Y+2	; 0x02
 34a:	28 2f       	mov	r18, r24
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	02 2e       	mov	r0, r18
 354:	02 c0       	rjmp	.+4      	; 0x35a <GPIO_voidSetPinDirection+0xa6>
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	0a 94       	dec	r0
 35c:	e2 f7       	brpl	.-8      	; 0x356 <GPIO_voidSetPinDirection+0xa2>
 35e:	84 2b       	or	r24, r20
 360:	8c 93       	st	X, r24
 362:	9f c0       	rjmp	.+318    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
			break;

			case PORTC :
			SET_BIT (GPIO_DDRC , pin);
 364:	a4 e3       	ldi	r26, 0x34	; 52
 366:	b0 e0       	ldi	r27, 0x00	; 0
 368:	e4 e3       	ldi	r30, 0x34	; 52
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	80 81       	ld	r24, Z
 36e:	48 2f       	mov	r20, r24
 370:	8a 81       	ldd	r24, Y+2	; 0x02
 372:	28 2f       	mov	r18, r24
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	02 2e       	mov	r0, r18
 37c:	02 c0       	rjmp	.+4      	; 0x382 <GPIO_voidSetPinDirection+0xce>
 37e:	88 0f       	add	r24, r24
 380:	99 1f       	adc	r25, r25
 382:	0a 94       	dec	r0
 384:	e2 f7       	brpl	.-8      	; 0x37e <GPIO_voidSetPinDirection+0xca>
 386:	84 2b       	or	r24, r20
 388:	8c 93       	st	X, r24
 38a:	8b c0       	rjmp	.+278    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
			break;

			case PORTD :
			SET_BIT (GPIO_DDRD , pin);
 38c:	a1 e3       	ldi	r26, 0x31	; 49
 38e:	b0 e0       	ldi	r27, 0x00	; 0
 390:	e1 e3       	ldi	r30, 0x31	; 49
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	80 81       	ld	r24, Z
 396:	48 2f       	mov	r20, r24
 398:	8a 81       	ldd	r24, Y+2	; 0x02
 39a:	28 2f       	mov	r18, r24
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	02 2e       	mov	r0, r18
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <GPIO_voidSetPinDirection+0xf6>
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	0a 94       	dec	r0
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <GPIO_voidSetPinDirection+0xf2>
 3ae:	84 2b       	or	r24, r20
 3b0:	8c 93       	st	X, r24
 3b2:	77 c0       	rjmp	.+238    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>

			default:
			break;
		}
	}
	else if (dirc == INPUT)
 3b4:	8b 81       	ldd	r24, Y+3	; 0x03
 3b6:	88 23       	and	r24, r24
 3b8:	09 f0       	breq	.+2      	; 0x3bc <GPIO_voidSetPinDirection+0x108>
 3ba:	73 c0       	rjmp	.+230    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
	{
		switch (port_id)
 3bc:	89 81       	ldd	r24, Y+1	; 0x01
 3be:	28 2f       	mov	r18, r24
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	3d 83       	std	Y+5, r19	; 0x05
 3c4:	2c 83       	std	Y+4, r18	; 0x04
 3c6:	8c 81       	ldd	r24, Y+4	; 0x04
 3c8:	9d 81       	ldd	r25, Y+5	; 0x05
 3ca:	81 30       	cpi	r24, 0x01	; 1
 3cc:	91 05       	cpc	r25, r1
 3ce:	59 f1       	breq	.+86     	; 0x426 <GPIO_voidSetPinDirection+0x172>
 3d0:	2c 81       	ldd	r18, Y+4	; 0x04
 3d2:	3d 81       	ldd	r19, Y+5	; 0x05
 3d4:	22 30       	cpi	r18, 0x02	; 2
 3d6:	31 05       	cpc	r19, r1
 3d8:	2c f4       	brge	.+10     	; 0x3e4 <GPIO_voidSetPinDirection+0x130>
 3da:	8c 81       	ldd	r24, Y+4	; 0x04
 3dc:	9d 81       	ldd	r25, Y+5	; 0x05
 3de:	00 97       	sbiw	r24, 0x00	; 0
 3e0:	69 f0       	breq	.+26     	; 0x3fc <GPIO_voidSetPinDirection+0x148>
 3e2:	5f c0       	rjmp	.+190    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
 3e4:	2c 81       	ldd	r18, Y+4	; 0x04
 3e6:	3d 81       	ldd	r19, Y+5	; 0x05
 3e8:	22 30       	cpi	r18, 0x02	; 2
 3ea:	31 05       	cpc	r19, r1
 3ec:	89 f1       	breq	.+98     	; 0x450 <GPIO_voidSetPinDirection+0x19c>
 3ee:	8c 81       	ldd	r24, Y+4	; 0x04
 3f0:	9d 81       	ldd	r25, Y+5	; 0x05
 3f2:	83 30       	cpi	r24, 0x03	; 3
 3f4:	91 05       	cpc	r25, r1
 3f6:	09 f4       	brne	.+2      	; 0x3fa <GPIO_voidSetPinDirection+0x146>
 3f8:	40 c0       	rjmp	.+128    	; 0x47a <GPIO_voidSetPinDirection+0x1c6>
 3fa:	53 c0       	rjmp	.+166    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
		{
			case PORTA :
			CLR_BIT (GPIO_DDRA , pin);
 3fc:	aa e3       	ldi	r26, 0x3A	; 58
 3fe:	b0 e0       	ldi	r27, 0x00	; 0
 400:	ea e3       	ldi	r30, 0x3A	; 58
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	80 81       	ld	r24, Z
 406:	48 2f       	mov	r20, r24
 408:	8a 81       	ldd	r24, Y+2	; 0x02
 40a:	28 2f       	mov	r18, r24
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	02 2e       	mov	r0, r18
 414:	02 c0       	rjmp	.+4      	; 0x41a <GPIO_voidSetPinDirection+0x166>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	0a 94       	dec	r0
 41c:	e2 f7       	brpl	.-8      	; 0x416 <GPIO_voidSetPinDirection+0x162>
 41e:	80 95       	com	r24
 420:	84 23       	and	r24, r20
 422:	8c 93       	st	X, r24
 424:	3e c0       	rjmp	.+124    	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
			break;

			case PORTB :
			CLR_BIT (GPIO_DDRB , pin);
 426:	a7 e3       	ldi	r26, 0x37	; 55
 428:	b0 e0       	ldi	r27, 0x00	; 0
 42a:	e7 e3       	ldi	r30, 0x37	; 55
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	48 2f       	mov	r20, r24
 432:	8a 81       	ldd	r24, Y+2	; 0x02
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	02 2e       	mov	r0, r18
 43e:	02 c0       	rjmp	.+4      	; 0x444 <GPIO_voidSetPinDirection+0x190>
 440:	88 0f       	add	r24, r24
 442:	99 1f       	adc	r25, r25
 444:	0a 94       	dec	r0
 446:	e2 f7       	brpl	.-8      	; 0x440 <GPIO_voidSetPinDirection+0x18c>
 448:	80 95       	com	r24
 44a:	84 23       	and	r24, r20
 44c:	8c 93       	st	X, r24
 44e:	29 c0       	rjmp	.+82     	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
			break;

			case PORTC :
			CLR_BIT (GPIO_DDRC , pin);
 450:	a4 e3       	ldi	r26, 0x34	; 52
 452:	b0 e0       	ldi	r27, 0x00	; 0
 454:	e4 e3       	ldi	r30, 0x34	; 52
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	80 81       	ld	r24, Z
 45a:	48 2f       	mov	r20, r24
 45c:	8a 81       	ldd	r24, Y+2	; 0x02
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	02 2e       	mov	r0, r18
 468:	02 c0       	rjmp	.+4      	; 0x46e <GPIO_voidSetPinDirection+0x1ba>
 46a:	88 0f       	add	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	0a 94       	dec	r0
 470:	e2 f7       	brpl	.-8      	; 0x46a <GPIO_voidSetPinDirection+0x1b6>
 472:	80 95       	com	r24
 474:	84 23       	and	r24, r20
 476:	8c 93       	st	X, r24
 478:	14 c0       	rjmp	.+40     	; 0x4a2 <GPIO_voidSetPinDirection+0x1ee>
			break;

			case PORTD :
			CLR_BIT (GPIO_DDRD , pin);
 47a:	a1 e3       	ldi	r26, 0x31	; 49
 47c:	b0 e0       	ldi	r27, 0x00	; 0
 47e:	e1 e3       	ldi	r30, 0x31	; 49
 480:	f0 e0       	ldi	r31, 0x00	; 0
 482:	80 81       	ld	r24, Z
 484:	48 2f       	mov	r20, r24
 486:	8a 81       	ldd	r24, Y+2	; 0x02
 488:	28 2f       	mov	r18, r24
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	02 2e       	mov	r0, r18
 492:	02 c0       	rjmp	.+4      	; 0x498 <GPIO_voidSetPinDirection+0x1e4>
 494:	88 0f       	add	r24, r24
 496:	99 1f       	adc	r25, r25
 498:	0a 94       	dec	r0
 49a:	e2 f7       	brpl	.-8      	; 0x494 <GPIO_voidSetPinDirection+0x1e0>
 49c:	80 95       	com	r24
 49e:	84 23       	and	r24, r20
 4a0:	8c 93       	st	X, r24
	}
	else
	{
		/* Should not be here */
	}
}
 4a2:	27 96       	adiw	r28, 0x07	; 7
 4a4:	0f b6       	in	r0, 0x3f	; 63
 4a6:	f8 94       	cli
 4a8:	de bf       	out	0x3e, r29	; 62
 4aa:	0f be       	out	0x3f, r0	; 63
 4ac:	cd bf       	out	0x3d, r28	; 61
 4ae:	cf 91       	pop	r28
 4b0:	df 91       	pop	r29
 4b2:	08 95       	ret

000004b4 <GPIO_voidSetPortValue>:

void GPIO_voidSetPortValue(u8 port_id , u8 value)
{
 4b4:	df 93       	push	r29
 4b6:	cf 93       	push	r28
 4b8:	00 d0       	rcall	.+0      	; 0x4ba <GPIO_voidSetPortValue+0x6>
 4ba:	00 d0       	rcall	.+0      	; 0x4bc <GPIO_voidSetPortValue+0x8>
 4bc:	cd b7       	in	r28, 0x3d	; 61
 4be:	de b7       	in	r29, 0x3e	; 62
 4c0:	89 83       	std	Y+1, r24	; 0x01
 4c2:	6a 83       	std	Y+2, r22	; 0x02
	switch (port_id){
 4c4:	89 81       	ldd	r24, Y+1	; 0x01
 4c6:	28 2f       	mov	r18, r24
 4c8:	30 e0       	ldi	r19, 0x00	; 0
 4ca:	3c 83       	std	Y+4, r19	; 0x04
 4cc:	2b 83       	std	Y+3, r18	; 0x03
 4ce:	8b 81       	ldd	r24, Y+3	; 0x03
 4d0:	9c 81       	ldd	r25, Y+4	; 0x04
 4d2:	81 30       	cpi	r24, 0x01	; 1
 4d4:	91 05       	cpc	r25, r1
 4d6:	d1 f0       	breq	.+52     	; 0x50c <GPIO_voidSetPortValue+0x58>
 4d8:	2b 81       	ldd	r18, Y+3	; 0x03
 4da:	3c 81       	ldd	r19, Y+4	; 0x04
 4dc:	22 30       	cpi	r18, 0x02	; 2
 4de:	31 05       	cpc	r19, r1
 4e0:	2c f4       	brge	.+10     	; 0x4ec <GPIO_voidSetPortValue+0x38>
 4e2:	8b 81       	ldd	r24, Y+3	; 0x03
 4e4:	9c 81       	ldd	r25, Y+4	; 0x04
 4e6:	00 97       	sbiw	r24, 0x00	; 0
 4e8:	61 f0       	breq	.+24     	; 0x502 <GPIO_voidSetPortValue+0x4e>
 4ea:	1e c0       	rjmp	.+60     	; 0x528 <GPIO_voidSetPortValue+0x74>
 4ec:	2b 81       	ldd	r18, Y+3	; 0x03
 4ee:	3c 81       	ldd	r19, Y+4	; 0x04
 4f0:	22 30       	cpi	r18, 0x02	; 2
 4f2:	31 05       	cpc	r19, r1
 4f4:	81 f0       	breq	.+32     	; 0x516 <GPIO_voidSetPortValue+0x62>
 4f6:	8b 81       	ldd	r24, Y+3	; 0x03
 4f8:	9c 81       	ldd	r25, Y+4	; 0x04
 4fa:	83 30       	cpi	r24, 0x03	; 3
 4fc:	91 05       	cpc	r25, r1
 4fe:	81 f0       	breq	.+32     	; 0x520 <GPIO_voidSetPortValue+0x6c>
 500:	13 c0       	rjmp	.+38     	; 0x528 <GPIO_voidSetPortValue+0x74>
		case PORTA :
			GPIO_PORTA = value ;
 502:	eb e3       	ldi	r30, 0x3B	; 59
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	8a 81       	ldd	r24, Y+2	; 0x02
 508:	80 83       	st	Z, r24
 50a:	0e c0       	rjmp	.+28     	; 0x528 <GPIO_voidSetPortValue+0x74>
			break;

		case PORTB :
			GPIO_PORTB = value ;
 50c:	e8 e3       	ldi	r30, 0x38	; 56
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	8a 81       	ldd	r24, Y+2	; 0x02
 512:	80 83       	st	Z, r24
 514:	09 c0       	rjmp	.+18     	; 0x528 <GPIO_voidSetPortValue+0x74>
			break;

		case PORTC :
			GPIO_PORTC = value ;
 516:	e5 e3       	ldi	r30, 0x35	; 53
 518:	f0 e0       	ldi	r31, 0x00	; 0
 51a:	8a 81       	ldd	r24, Y+2	; 0x02
 51c:	80 83       	st	Z, r24
 51e:	04 c0       	rjmp	.+8      	; 0x528 <GPIO_voidSetPortValue+0x74>
			break;

		case PORTD :
			GPIO_PORTD = value ;
 520:	e2 e3       	ldi	r30, 0x32	; 50
 522:	f0 e0       	ldi	r31, 0x00	; 0
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	80 83       	st	Z, r24
			break;

		default:
			break;
	}
}
 528:	0f 90       	pop	r0
 52a:	0f 90       	pop	r0
 52c:	0f 90       	pop	r0
 52e:	0f 90       	pop	r0
 530:	cf 91       	pop	r28
 532:	df 91       	pop	r29
 534:	08 95       	ret

00000536 <GPIO_voidSetPortDirection>:

void GPIO_voidSetPortDirection(u8 port_id , u8 dirc)
{
 536:	df 93       	push	r29
 538:	cf 93       	push	r28
 53a:	00 d0       	rcall	.+0      	; 0x53c <GPIO_voidSetPortDirection+0x6>
 53c:	00 d0       	rcall	.+0      	; 0x53e <GPIO_voidSetPortDirection+0x8>
 53e:	00 d0       	rcall	.+0      	; 0x540 <GPIO_voidSetPortDirection+0xa>
 540:	cd b7       	in	r28, 0x3d	; 61
 542:	de b7       	in	r29, 0x3e	; 62
 544:	89 83       	std	Y+1, r24	; 0x01
 546:	6a 83       	std	Y+2, r22	; 0x02
	if (dirc == OUTPUT)
 548:	8a 81       	ldd	r24, Y+2	; 0x02
 54a:	81 30       	cpi	r24, 0x01	; 1
 54c:	99 f5       	brne	.+102    	; 0x5b4 <GPIO_voidSetPortDirection+0x7e>
	{
		switch (port_id){
 54e:	89 81       	ldd	r24, Y+1	; 0x01
 550:	28 2f       	mov	r18, r24
 552:	30 e0       	ldi	r19, 0x00	; 0
 554:	3e 83       	std	Y+6, r19	; 0x06
 556:	2d 83       	std	Y+5, r18	; 0x05
 558:	8d 81       	ldd	r24, Y+5	; 0x05
 55a:	9e 81       	ldd	r25, Y+6	; 0x06
 55c:	81 30       	cpi	r24, 0x01	; 1
 55e:	91 05       	cpc	r25, r1
 560:	d1 f0       	breq	.+52     	; 0x596 <GPIO_voidSetPortDirection+0x60>
 562:	2d 81       	ldd	r18, Y+5	; 0x05
 564:	3e 81       	ldd	r19, Y+6	; 0x06
 566:	22 30       	cpi	r18, 0x02	; 2
 568:	31 05       	cpc	r19, r1
 56a:	2c f4       	brge	.+10     	; 0x576 <GPIO_voidSetPortDirection+0x40>
 56c:	8d 81       	ldd	r24, Y+5	; 0x05
 56e:	9e 81       	ldd	r25, Y+6	; 0x06
 570:	00 97       	sbiw	r24, 0x00	; 0
 572:	61 f0       	breq	.+24     	; 0x58c <GPIO_voidSetPortDirection+0x56>
 574:	50 c0       	rjmp	.+160    	; 0x616 <GPIO_voidSetPortDirection+0xe0>
 576:	2d 81       	ldd	r18, Y+5	; 0x05
 578:	3e 81       	ldd	r19, Y+6	; 0x06
 57a:	22 30       	cpi	r18, 0x02	; 2
 57c:	31 05       	cpc	r19, r1
 57e:	81 f0       	breq	.+32     	; 0x5a0 <GPIO_voidSetPortDirection+0x6a>
 580:	8d 81       	ldd	r24, Y+5	; 0x05
 582:	9e 81       	ldd	r25, Y+6	; 0x06
 584:	83 30       	cpi	r24, 0x03	; 3
 586:	91 05       	cpc	r25, r1
 588:	81 f0       	breq	.+32     	; 0x5aa <GPIO_voidSetPortDirection+0x74>
 58a:	45 c0       	rjmp	.+138    	; 0x616 <GPIO_voidSetPortDirection+0xe0>
			case PORTA :
				GPIO_DDRA = 255;
 58c:	ea e3       	ldi	r30, 0x3A	; 58
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	8f ef       	ldi	r24, 0xFF	; 255
 592:	80 83       	st	Z, r24
 594:	40 c0       	rjmp	.+128    	; 0x616 <GPIO_voidSetPortDirection+0xe0>
				break;
			case PORTB :
				GPIO_DDRB = 255;
 596:	e7 e3       	ldi	r30, 0x37	; 55
 598:	f0 e0       	ldi	r31, 0x00	; 0
 59a:	8f ef       	ldi	r24, 0xFF	; 255
 59c:	80 83       	st	Z, r24
 59e:	3b c0       	rjmp	.+118    	; 0x616 <GPIO_voidSetPortDirection+0xe0>
				break;
			case PORTC :
				GPIO_DDRC = 255;
 5a0:	e4 e3       	ldi	r30, 0x34	; 52
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	8f ef       	ldi	r24, 0xFF	; 255
 5a6:	80 83       	st	Z, r24
 5a8:	36 c0       	rjmp	.+108    	; 0x616 <GPIO_voidSetPortDirection+0xe0>
				break;
			case PORTD :
				GPIO_DDRD = 255;
 5aa:	e1 e3       	ldi	r30, 0x31	; 49
 5ac:	f0 e0       	ldi	r31, 0x00	; 0
 5ae:	8f ef       	ldi	r24, 0xFF	; 255
 5b0:	80 83       	st	Z, r24
 5b2:	31 c0       	rjmp	.+98     	; 0x616 <GPIO_voidSetPortDirection+0xe0>
				break;
			default:
				break;
		}
	}
	else if (dirc == INPUT)
 5b4:	8a 81       	ldd	r24, Y+2	; 0x02
 5b6:	88 23       	and	r24, r24
 5b8:	71 f5       	brne	.+92     	; 0x616 <GPIO_voidSetPortDirection+0xe0>
	{
		switch (port_id){
 5ba:	89 81       	ldd	r24, Y+1	; 0x01
 5bc:	28 2f       	mov	r18, r24
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	3c 83       	std	Y+4, r19	; 0x04
 5c2:	2b 83       	std	Y+3, r18	; 0x03
 5c4:	8b 81       	ldd	r24, Y+3	; 0x03
 5c6:	9c 81       	ldd	r25, Y+4	; 0x04
 5c8:	81 30       	cpi	r24, 0x01	; 1
 5ca:	91 05       	cpc	r25, r1
 5cc:	c9 f0       	breq	.+50     	; 0x600 <GPIO_voidSetPortDirection+0xca>
 5ce:	2b 81       	ldd	r18, Y+3	; 0x03
 5d0:	3c 81       	ldd	r19, Y+4	; 0x04
 5d2:	22 30       	cpi	r18, 0x02	; 2
 5d4:	31 05       	cpc	r19, r1
 5d6:	2c f4       	brge	.+10     	; 0x5e2 <GPIO_voidSetPortDirection+0xac>
 5d8:	8b 81       	ldd	r24, Y+3	; 0x03
 5da:	9c 81       	ldd	r25, Y+4	; 0x04
 5dc:	00 97       	sbiw	r24, 0x00	; 0
 5de:	61 f0       	breq	.+24     	; 0x5f8 <GPIO_voidSetPortDirection+0xc2>
 5e0:	1a c0       	rjmp	.+52     	; 0x616 <GPIO_voidSetPortDirection+0xe0>
 5e2:	2b 81       	ldd	r18, Y+3	; 0x03
 5e4:	3c 81       	ldd	r19, Y+4	; 0x04
 5e6:	22 30       	cpi	r18, 0x02	; 2
 5e8:	31 05       	cpc	r19, r1
 5ea:	71 f0       	breq	.+28     	; 0x608 <GPIO_voidSetPortDirection+0xd2>
 5ec:	8b 81       	ldd	r24, Y+3	; 0x03
 5ee:	9c 81       	ldd	r25, Y+4	; 0x04
 5f0:	83 30       	cpi	r24, 0x03	; 3
 5f2:	91 05       	cpc	r25, r1
 5f4:	69 f0       	breq	.+26     	; 0x610 <GPIO_voidSetPortDirection+0xda>
 5f6:	0f c0       	rjmp	.+30     	; 0x616 <GPIO_voidSetPortDirection+0xe0>
			case PORTA :
				GPIO_DDRA = 0;
 5f8:	ea e3       	ldi	r30, 0x3A	; 58
 5fa:	f0 e0       	ldi	r31, 0x00	; 0
 5fc:	10 82       	st	Z, r1
 5fe:	0b c0       	rjmp	.+22     	; 0x616 <GPIO_voidSetPortDirection+0xe0>
				break;

			case PORTB :
				GPIO_DDRB = 0;
 600:	e7 e3       	ldi	r30, 0x37	; 55
 602:	f0 e0       	ldi	r31, 0x00	; 0
 604:	10 82       	st	Z, r1
 606:	07 c0       	rjmp	.+14     	; 0x616 <GPIO_voidSetPortDirection+0xe0>
				break;

			case PORTC :
				GPIO_DDRC = 0;
 608:	e4 e3       	ldi	r30, 0x34	; 52
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	10 82       	st	Z, r1
 60e:	03 c0       	rjmp	.+6      	; 0x616 <GPIO_voidSetPortDirection+0xe0>
				break;

			case PORTD :
				GPIO_DDRD = 0;
 610:	e1 e3       	ldi	r30, 0x31	; 49
 612:	f0 e0       	ldi	r31, 0x00	; 0
 614:	10 82       	st	Z, r1
		}
	}
	else {

	}
}
 616:	26 96       	adiw	r28, 0x06	; 6
 618:	0f b6       	in	r0, 0x3f	; 63
 61a:	f8 94       	cli
 61c:	de bf       	out	0x3e, r29	; 62
 61e:	0f be       	out	0x3f, r0	; 63
 620:	cd bf       	out	0x3d, r28	; 61
 622:	cf 91       	pop	r28
 624:	df 91       	pop	r29
 626:	08 95       	ret

00000628 <GPIO_u8GetPinValue>:

u8 GPIO_u8GetPinValue(u8 port_id , u8 pin)
{
 628:	df 93       	push	r29
 62a:	cf 93       	push	r28
 62c:	00 d0       	rcall	.+0      	; 0x62e <GPIO_u8GetPinValue+0x6>
 62e:	00 d0       	rcall	.+0      	; 0x630 <GPIO_u8GetPinValue+0x8>
 630:	0f 92       	push	r0
 632:	cd b7       	in	r28, 0x3d	; 61
 634:	de b7       	in	r29, 0x3e	; 62
 636:	8a 83       	std	Y+2, r24	; 0x02
 638:	6b 83       	std	Y+3, r22	; 0x03
	u8 value ;
	switch (port_id)
 63a:	8a 81       	ldd	r24, Y+2	; 0x02
 63c:	28 2f       	mov	r18, r24
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	3d 83       	std	Y+5, r19	; 0x05
 642:	2c 83       	std	Y+4, r18	; 0x04
 644:	4c 81       	ldd	r20, Y+4	; 0x04
 646:	5d 81       	ldd	r21, Y+5	; 0x05
 648:	41 30       	cpi	r20, 0x01	; 1
 64a:	51 05       	cpc	r21, r1
 64c:	41 f1       	breq	.+80     	; 0x69e <GPIO_u8GetPinValue+0x76>
 64e:	8c 81       	ldd	r24, Y+4	; 0x04
 650:	9d 81       	ldd	r25, Y+5	; 0x05
 652:	82 30       	cpi	r24, 0x02	; 2
 654:	91 05       	cpc	r25, r1
 656:	34 f4       	brge	.+12     	; 0x664 <GPIO_u8GetPinValue+0x3c>
 658:	2c 81       	ldd	r18, Y+4	; 0x04
 65a:	3d 81       	ldd	r19, Y+5	; 0x05
 65c:	21 15       	cp	r18, r1
 65e:	31 05       	cpc	r19, r1
 660:	61 f0       	breq	.+24     	; 0x67a <GPIO_u8GetPinValue+0x52>
 662:	52 c0       	rjmp	.+164    	; 0x708 <GPIO_u8GetPinValue+0xe0>
 664:	4c 81       	ldd	r20, Y+4	; 0x04
 666:	5d 81       	ldd	r21, Y+5	; 0x05
 668:	42 30       	cpi	r20, 0x02	; 2
 66a:	51 05       	cpc	r21, r1
 66c:	51 f1       	breq	.+84     	; 0x6c2 <GPIO_u8GetPinValue+0x9a>
 66e:	8c 81       	ldd	r24, Y+4	; 0x04
 670:	9d 81       	ldd	r25, Y+5	; 0x05
 672:	83 30       	cpi	r24, 0x03	; 3
 674:	91 05       	cpc	r25, r1
 676:	b9 f1       	breq	.+110    	; 0x6e6 <GPIO_u8GetPinValue+0xbe>
 678:	47 c0       	rjmp	.+142    	; 0x708 <GPIO_u8GetPinValue+0xe0>
	{
		case PORTA :
		value = GET_BIT(GPIO_PINA , pin);
 67a:	e9 e3       	ldi	r30, 0x39	; 57
 67c:	f0 e0       	ldi	r31, 0x00	; 0
 67e:	80 81       	ld	r24, Z
 680:	28 2f       	mov	r18, r24
 682:	30 e0       	ldi	r19, 0x00	; 0
 684:	8b 81       	ldd	r24, Y+3	; 0x03
 686:	88 2f       	mov	r24, r24
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	a9 01       	movw	r20, r18
 68c:	02 c0       	rjmp	.+4      	; 0x692 <GPIO_u8GetPinValue+0x6a>
 68e:	55 95       	asr	r21
 690:	47 95       	ror	r20
 692:	8a 95       	dec	r24
 694:	e2 f7       	brpl	.-8      	; 0x68e <GPIO_u8GetPinValue+0x66>
 696:	ca 01       	movw	r24, r20
 698:	81 70       	andi	r24, 0x01	; 1
 69a:	89 83       	std	Y+1, r24	; 0x01
 69c:	35 c0       	rjmp	.+106    	; 0x708 <GPIO_u8GetPinValue+0xe0>
		break;

		case PORTB :
		value = GET_BIT(GPIO_PINB , pin);
 69e:	e6 e3       	ldi	r30, 0x36	; 54
 6a0:	f0 e0       	ldi	r31, 0x00	; 0
 6a2:	80 81       	ld	r24, Z
 6a4:	28 2f       	mov	r18, r24
 6a6:	30 e0       	ldi	r19, 0x00	; 0
 6a8:	8b 81       	ldd	r24, Y+3	; 0x03
 6aa:	88 2f       	mov	r24, r24
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	a9 01       	movw	r20, r18
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <GPIO_u8GetPinValue+0x8e>
 6b2:	55 95       	asr	r21
 6b4:	47 95       	ror	r20
 6b6:	8a 95       	dec	r24
 6b8:	e2 f7       	brpl	.-8      	; 0x6b2 <GPIO_u8GetPinValue+0x8a>
 6ba:	ca 01       	movw	r24, r20
 6bc:	81 70       	andi	r24, 0x01	; 1
 6be:	89 83       	std	Y+1, r24	; 0x01
 6c0:	23 c0       	rjmp	.+70     	; 0x708 <GPIO_u8GetPinValue+0xe0>
		break;

		case PORTC :
		value = GET_BIT(GPIO_PINC , pin);
 6c2:	e3 e3       	ldi	r30, 0x33	; 51
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	80 81       	ld	r24, Z
 6c8:	28 2f       	mov	r18, r24
 6ca:	30 e0       	ldi	r19, 0x00	; 0
 6cc:	8b 81       	ldd	r24, Y+3	; 0x03
 6ce:	88 2f       	mov	r24, r24
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	a9 01       	movw	r20, r18
 6d4:	02 c0       	rjmp	.+4      	; 0x6da <GPIO_u8GetPinValue+0xb2>
 6d6:	55 95       	asr	r21
 6d8:	47 95       	ror	r20
 6da:	8a 95       	dec	r24
 6dc:	e2 f7       	brpl	.-8      	; 0x6d6 <GPIO_u8GetPinValue+0xae>
 6de:	ca 01       	movw	r24, r20
 6e0:	81 70       	andi	r24, 0x01	; 1
 6e2:	89 83       	std	Y+1, r24	; 0x01
 6e4:	11 c0       	rjmp	.+34     	; 0x708 <GPIO_u8GetPinValue+0xe0>
		break;

		case PORTD :
		value = GET_BIT(GPIO_PIND , pin);
 6e6:	e0 e3       	ldi	r30, 0x30	; 48
 6e8:	f0 e0       	ldi	r31, 0x00	; 0
 6ea:	80 81       	ld	r24, Z
 6ec:	28 2f       	mov	r18, r24
 6ee:	30 e0       	ldi	r19, 0x00	; 0
 6f0:	8b 81       	ldd	r24, Y+3	; 0x03
 6f2:	88 2f       	mov	r24, r24
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	a9 01       	movw	r20, r18
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <GPIO_u8GetPinValue+0xd6>
 6fa:	55 95       	asr	r21
 6fc:	47 95       	ror	r20
 6fe:	8a 95       	dec	r24
 700:	e2 f7       	brpl	.-8      	; 0x6fa <GPIO_u8GetPinValue+0xd2>
 702:	ca 01       	movw	r24, r20
 704:	81 70       	andi	r24, 0x01	; 1
 706:	89 83       	std	Y+1, r24	; 0x01
		break;

		default:
		break;
	}
	return value ;
 708:	89 81       	ldd	r24, Y+1	; 0x01
}
 70a:	0f 90       	pop	r0
 70c:	0f 90       	pop	r0
 70e:	0f 90       	pop	r0
 710:	0f 90       	pop	r0
 712:	0f 90       	pop	r0
 714:	cf 91       	pop	r28
 716:	df 91       	pop	r29
 718:	08 95       	ret

0000071a <TMR_voidTimer0Init>:

void(* OC0_ISR)(void) = NULL ;


void TMR_voidTimer0Init(void)
{
 71a:	df 93       	push	r29
 71c:	cf 93       	push	r28
 71e:	cd b7       	in	r28, 0x3d	; 61
 720:	de b7       	in	r29, 0x3e	; 62
	/* Enable CTC mode*/
	SET_BIT(TCCR0 , TCCR0_WGM01);
 722:	a3 e5       	ldi	r26, 0x53	; 83
 724:	b0 e0       	ldi	r27, 0x00	; 0
 726:	e3 e5       	ldi	r30, 0x53	; 83
 728:	f0 e0       	ldi	r31, 0x00	; 0
 72a:	80 81       	ld	r24, Z
 72c:	88 60       	ori	r24, 0x08	; 8
 72e:	8c 93       	st	X, r24
	CLR_BIT(TCCR0 , TCCR0_WGM00);
 730:	a3 e5       	ldi	r26, 0x53	; 83
 732:	b0 e0       	ldi	r27, 0x00	; 0
 734:	e3 e5       	ldi	r30, 0x53	; 83
 736:	f0 e0       	ldi	r31, 0x00	; 0
 738:	80 81       	ld	r24, Z
 73a:	8f 7b       	andi	r24, 0xBF	; 191
 73c:	8c 93       	st	X, r24
	
	/* Init OCR0  With f = 8 MHZ , PS = 256*/
	OCR0 = 125 ;
 73e:	ec e5       	ldi	r30, 0x5C	; 92
 740:	f0 e0       	ldi	r31, 0x00	; 0
 742:	8d e7       	ldi	r24, 0x7D	; 125
 744:	80 83       	st	Z, r24
	
	/* Select Pre scaler */
	SET_BIT(TCCR0 , TCCR0_CS00);
 746:	a3 e5       	ldi	r26, 0x53	; 83
 748:	b0 e0       	ldi	r27, 0x00	; 0
 74a:	e3 e5       	ldi	r30, 0x53	; 83
 74c:	f0 e0       	ldi	r31, 0x00	; 0
 74e:	80 81       	ld	r24, Z
 750:	81 60       	ori	r24, 0x01	; 1
 752:	8c 93       	st	X, r24
	SET_BIT(TCCR0 , TCCR0_CS01);
 754:	a3 e5       	ldi	r26, 0x53	; 83
 756:	b0 e0       	ldi	r27, 0x00	; 0
 758:	e3 e5       	ldi	r30, 0x53	; 83
 75a:	f0 e0       	ldi	r31, 0x00	; 0
 75c:	80 81       	ld	r24, Z
 75e:	82 60       	ori	r24, 0x02	; 2
 760:	8c 93       	st	X, r24
	CLR_BIT(TCCR0 , TCCR0_CS02);
 762:	a3 e5       	ldi	r26, 0x53	; 83
 764:	b0 e0       	ldi	r27, 0x00	; 0
 766:	e3 e5       	ldi	r30, 0x53	; 83
 768:	f0 e0       	ldi	r31, 0x00	; 0
 76a:	80 81       	ld	r24, Z
 76c:	8b 7f       	andi	r24, 0xFB	; 251
 76e:	8c 93       	st	X, r24
}
 770:	cf 91       	pop	r28
 772:	df 91       	pop	r29
 774:	08 95       	ret

00000776 <TMR_voidTimer0SetCallBack>:
u8 TMR_voidTimer0SetCallBack(void (* func)(void))
{
 776:	df 93       	push	r29
 778:	cf 93       	push	r28
 77a:	00 d0       	rcall	.+0      	; 0x77c <TMR_voidTimer0SetCallBack+0x6>
 77c:	0f 92       	push	r0
 77e:	cd b7       	in	r28, 0x3d	; 61
 780:	de b7       	in	r29, 0x3e	; 62
 782:	9b 83       	std	Y+3, r25	; 0x03
 784:	8a 83       	std	Y+2, r24	; 0x02
	u8 local_error = OK;
 786:	19 82       	std	Y+1, r1	; 0x01
	if (func != NULL)
 788:	8a 81       	ldd	r24, Y+2	; 0x02
 78a:	9b 81       	ldd	r25, Y+3	; 0x03
 78c:	00 97       	sbiw	r24, 0x00	; 0
 78e:	71 f0       	breq	.+28     	; 0x7ac <TMR_voidTimer0SetCallBack+0x36>
	{
		OC0_ISR = func ;
 790:	8a 81       	ldd	r24, Y+2	; 0x02
 792:	9b 81       	ldd	r25, Y+3	; 0x03
 794:	90 93 61 00 	sts	0x0061, r25
 798:	80 93 60 00 	sts	0x0060, r24
		/*Enable Time Interrupt */
		SET_BIT(TIMSK , TIMSK_OCIE0);
 79c:	a9 e5       	ldi	r26, 0x59	; 89
 79e:	b0 e0       	ldi	r27, 0x00	; 0
 7a0:	e9 e5       	ldi	r30, 0x59	; 89
 7a2:	f0 e0       	ldi	r31, 0x00	; 0
 7a4:	80 81       	ld	r24, Z
 7a6:	82 60       	ori	r24, 0x02	; 2
 7a8:	8c 93       	st	X, r24
 7aa:	02 c0       	rjmp	.+4      	; 0x7b0 <TMR_voidTimer0SetCallBack+0x3a>
	}
	else 
	{
		local_error = N_OK;
 7ac:	81 e0       	ldi	r24, 0x01	; 1
 7ae:	89 83       	std	Y+1, r24	; 0x01
	}
	return local_error ;
 7b0:	89 81       	ldd	r24, Y+1	; 0x01
}
 7b2:	0f 90       	pop	r0
 7b4:	0f 90       	pop	r0
 7b6:	0f 90       	pop	r0
 7b8:	cf 91       	pop	r28
 7ba:	df 91       	pop	r29
 7bc:	08 95       	ret

000007be <__vector_10>:

void __vector_10 (void) __attribute__((signal)) ;
void __vector_10 (void)
{
 7be:	1f 92       	push	r1
 7c0:	0f 92       	push	r0
 7c2:	0f b6       	in	r0, 0x3f	; 63
 7c4:	0f 92       	push	r0
 7c6:	11 24       	eor	r1, r1
 7c8:	2f 93       	push	r18
 7ca:	3f 93       	push	r19
 7cc:	4f 93       	push	r20
 7ce:	5f 93       	push	r21
 7d0:	6f 93       	push	r22
 7d2:	7f 93       	push	r23
 7d4:	8f 93       	push	r24
 7d6:	9f 93       	push	r25
 7d8:	af 93       	push	r26
 7da:	bf 93       	push	r27
 7dc:	ef 93       	push	r30
 7de:	ff 93       	push	r31
 7e0:	df 93       	push	r29
 7e2:	cf 93       	push	r28
 7e4:	cd b7       	in	r28, 0x3d	; 61
 7e6:	de b7       	in	r29, 0x3e	; 62
	OC0_ISR();
 7e8:	e0 91 60 00 	lds	r30, 0x0060
 7ec:	f0 91 61 00 	lds	r31, 0x0061
 7f0:	09 95       	icall
}
 7f2:	cf 91       	pop	r28
 7f4:	df 91       	pop	r29
 7f6:	ff 91       	pop	r31
 7f8:	ef 91       	pop	r30
 7fa:	bf 91       	pop	r27
 7fc:	af 91       	pop	r26
 7fe:	9f 91       	pop	r25
 800:	8f 91       	pop	r24
 802:	7f 91       	pop	r23
 804:	6f 91       	pop	r22
 806:	5f 91       	pop	r21
 808:	4f 91       	pop	r20
 80a:	3f 91       	pop	r19
 80c:	2f 91       	pop	r18
 80e:	0f 90       	pop	r0
 810:	0f be       	out	0x3f, r0	; 63
 812:	0f 90       	pop	r0
 814:	1f 90       	pop	r1
 816:	18 95       	reti

00000818 <main>:
#include "TMR_Interface.h"

void PWM_BY_SW (void);

void main ()
{
 818:	df 93       	push	r29
 81a:	cf 93       	push	r28
 81c:	cd b7       	in	r28, 0x3d	; 61
 81e:	de b7       	in	r29, 0x3e	; 62
	/* Motor Control pin as output  */
	GPIO_voidSetPinDirection(PORTD , PIN0 , OUTPUT);
 820:	83 e0       	ldi	r24, 0x03	; 3
 822:	60 e0       	ldi	r22, 0x00	; 0
 824:	41 e0       	ldi	r20, 0x01	; 1
 826:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <GPIO_voidSetPinDirection>
	//GPIO_voidSetPinValue(PORTD , PIN0 , HIGH);
	GIE_voidEnable();
 82a:	0e 94 3e 00 	call	0x7c	; 0x7c <GIE_voidEnable>
	TMR_voidTimer0Init();
 82e:	0e 94 8d 03 	call	0x71a	; 0x71a <TMR_voidTimer0Init>
	TMR_voidTimer0SetCallBack(PWM_BY_SW);
 832:	8e e1       	ldi	r24, 0x1E	; 30
 834:	94 e0       	ldi	r25, 0x04	; 4
 836:	0e 94 bb 03 	call	0x776	; 0x776 <TMR_voidTimer0SetCallBack>
 83a:	ff cf       	rjmp	.-2      	; 0x83a <main+0x22>

0000083c <PWM_BY_SW>:
	}

}

void PWM_BY_SW (void)
{
 83c:	df 93       	push	r29
 83e:	cf 93       	push	r28
 840:	cd b7       	in	r28, 0x3d	; 61
 842:	de b7       	in	r29, 0x3e	; 62
	static u16 counter = 0;
	counter++;
 844:	80 91 62 00 	lds	r24, 0x0062
 848:	90 91 63 00 	lds	r25, 0x0063
 84c:	01 96       	adiw	r24, 0x01	; 1
 84e:	90 93 63 00 	sts	0x0063, r25
 852:	80 93 62 00 	sts	0x0062, r24
	if (counter == 5)
 856:	80 91 62 00 	lds	r24, 0x0062
 85a:	90 91 63 00 	lds	r25, 0x0063
 85e:	85 30       	cpi	r24, 0x05	; 5
 860:	91 05       	cpc	r25, r1
 862:	31 f4       	brne	.+12     	; 0x870 <__stack+0x11>
	{
		GPIO_voidSetPinValue(PORTD , PIN0 , LOW);
 864:	83 e0       	ldi	r24, 0x03	; 3
 866:	60 e0       	ldi	r22, 0x00	; 0
 868:	40 e0       	ldi	r20, 0x00	; 0
 86a:	0e 94 5a 00 	call	0xb4	; 0xb4 <GPIO_voidSetPinValue>
 86e:	10 c0       	rjmp	.+32     	; 0x890 <__stack+0x31>
	}
	else if (counter == 20)
 870:	80 91 62 00 	lds	r24, 0x0062
 874:	90 91 63 00 	lds	r25, 0x0063
 878:	84 31       	cpi	r24, 0x14	; 20
 87a:	91 05       	cpc	r25, r1
 87c:	49 f4       	brne	.+18     	; 0x890 <__stack+0x31>
	{
		GPIO_voidSetPinValue(PORTD , PIN0 , HIGH);
 87e:	83 e0       	ldi	r24, 0x03	; 3
 880:	60 e0       	ldi	r22, 0x00	; 0
 882:	41 e0       	ldi	r20, 0x01	; 1
 884:	0e 94 5a 00 	call	0xb4	; 0xb4 <GPIO_voidSetPinValue>
		counter = 0 ;
 888:	10 92 63 00 	sts	0x0063, r1
 88c:	10 92 62 00 	sts	0x0062, r1
	}
}
 890:	cf 91       	pop	r28
 892:	df 91       	pop	r29
 894:	08 95       	ret

00000896 <_exit>:
 896:	f8 94       	cli

00000898 <__stop_program>:
 898:	ff cf       	rjmp	.-2      	; 0x898 <__stop_program>
